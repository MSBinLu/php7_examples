PHP 7 NOTES

NOTES FROM CAL'S PRESENTATION
---------------------------------------------------------------------------------
Get link to MWOP's video on PSR-7
History of PHP

---------------------------------------------------------------------------------
BACKWARDS COMPATIBILITY BREAKS: things which could break your code
---------------------------------------------------------------------------------

RFC's
-- Funny ones!
-- New protocol: HTCPCP: https://www.ietf.org/rfc/rfc2324.txt
-- TCP over Carrier Pigeon: https://www.ietf.org/rfc/rfc1149.txt
-- https://wiki.php.net/rfc#php_70
Auto-vivification
-- automatic creation of new arrays and hashes as required every time an undefined value is dereferenced. 
Dereferencing
-- indirection (?)
-- obtaining a value
Abstract Syntax Tree
-- https://wiki.php.net/rfc/abstract_syntax_tree
-- decouples the parsing from the compiling aspect in the interpreter
-- the AST based implementation is 10-15% faster, but requires more memory (from 10% to 70% more depending on file size)
Uniform Variable Syntax
-- https://wiki.php.net/rfc/uniform_variable_syntax
ZPP Failure on Overflow
-- https://wiki.php.net/rfc/zpp_fail_on_overflow
-- If this happens, in php 7, an E_WARNING occurs ... which now generates an error which will stop the code
foreach behavior
-- https://wiki.php.net/rfc/php7_foreach
Dead / unmaintained extensions
Dead SAPIs: 
• aolserver
• apache		// NOTHING to do with PHP Apache Module!!!
• apache_hooks
• caudium
• continuity
• isapi
• milter 
• phttpd
• pi3web
• roxen
• thttpd
• tux
• webjames
• apache2filter - not really dead, but currently broken
• nsapi
Extensions with unmaintained dependencies 
• imap
• mcrypt		// OLD mcrypt ... not the newer extension
Extensions not yet ported to PHP7 
• interbase
• mssql
• oci8
• pdo_dblib
• pdo_oci
• sybase_ct
Filtered Serialize
-- why do it? -- good question!
-- why whitelist? -- better approach than blacklist
Exceptions / Errors / Throwable
-- NOTE: in certain circumstances, an "Error" is *thrown*
-- Not the same as an exception, but is in the same "level"
-- DO NOT try to recover after an error: engine is unstable!!!
-- All methods from Exception are now in Throwable 
-- *Cannot* just implement Throwable in your classes and expect it to do something
Easy Userland CSPRNG
-- Crytographically Secure Pseudo Random Number Generator
-- "Number" is not always a number: could be a key or a hash
-- Diff betw/ rand() and random_int() is the latter uses the OS pseudo-random functionality
   whereas rand() uses PHP ... which means its output can be predicted
-- these are wrappers for /dev/random or /dev/urandom
-- *highly* recommended: once you've adopted php7, replace all rand() with random_int()
NULL Coalesce Operator
-- Similar to the compressed ternary operator ?:
-- Is safe to use: don't need to run isset() 1st!
-- Like MySQL COALESCE() function, which returns the first non-NULL value of a list, or NULL if there are no non-NULL values.
-- Only op in PHP where you won't get a NOTICE for undefined variable
Scalar Type Hinting
-- Doesn't work unless "declare(strict_types=1)" is defined
-- This has to be at the top of EACH FILE where you want strict typing!!!
-- This is a compromise: it allows you to mix strictly type-hinted code with non-strict
-- It cannot be set globally: must be PER FILE
Native TLS
-- TLS =  thread-local-storage 

---------------------------------------------------------------------------------
HIGH IMPACT RFCs: new tools ... the *fun stuff*
---------------------------------------------------------------------------------
Moving phpng branch into master
-- https://wiki.php.net/rfc/phpng
-- concern over Facebook initiatives
---- HPHPc: "transpiler" for PHP (https://en.wikipedia.org/wiki/HipHop_for_PHP)
---- "hack" -- backward compatible version of PHP developed by Facebook
---- http://hacklang.org/
-- nearly 100% compatible and provides anywhere between 20% and 110% performance gains 
-- Drupal shown on benchmark slide is version 7

NOTES ON PHP7_CLASS.PDF
---------------------------------------------------------------------------------
replaced "json" extension with "jsond"
-- see: https://wiki.php.net/rfc/jsond
-- old extension: old, no maintainer, not a free license
-- benchmarks: https://github.com/bukka/php-jsond-bench/blob/master/reports/0001/summary.md
        


REF:  https://github.com/php/php-src/blob/php-7.0.0beta3/NEWS
REF:  https://github.com/php/php-src/blob/php-7.0.0beta3/UPGRADING
REPO: https://github.com/dbierer/php7_examples.git

***** NEW ***********************************************************************

FEATURES:

\u{xxxxx} Unicode Codepoint Escape Syntax
error_clear_last()
zend_sort ???
SEARCH WebDav method
"v" DateTime format modifier to get the 3-digit version of fraction of seconds
experimental (disabled by default) file based opcode cache
"alpn_protocols" SSL context option allowing encrypted client/server streams to negotiate alternative protocols using the ALPN TLS extension when built against OpenSSL 1.0.2 or newer.
wifcontinued()
wcontinued()
ReflectionGenerator class
Zlib::deflate_init(), deflate_add(), inflate_init(), inflate_add() functions allowing incremental/streaming compression/decompression

OPERATORS:

??
$a <=> $b -- combined comparison ("spaceship") operator; returns -1, 0 or 1


CONSTANTS:

PHP_INT_MIN
DateTime::RFC3339_EXTENDED to output in RFC3339 Extended format which includes fraction of seconds
    

***** IMPROVED ******************************************************************

pcntl_wait() and pcntl_waitpid() -- Added rusage support        
NULL byte protection to exec, system and passthru
unserialize() -- Added options parameter for  allowing to specify acceptable classes
Closure::call() method
Reflection support for return types and type declarations.
getrusage() -- Added Windows support
ZipArchive -- added setCompressionName() and setCompressionIndex() methods


***** REMOVED *******************************************************************
